# 发送请求 查询所有的数据 select * from xxx
# 这种语句：DSL语句类似于SQL
GET _search
{
  "query": {
    "match_all": {}
  }
}

# 分词器 实现分词效果的演示  ES内置的默认的分词器standard  默认的分词器 不支持中文分词
POST /_analyze
{
  "text": "lucene is a java language 中国共产党伟大祖国",
  "analyzer": "cjk"
}

# 使用第三方的中文分词器 ik分词器 使用它
# 他的分词效果优秀 将不是一个词变成一个词，还可以 将一个词停用掉。

# 分词器有两种： ik_smart ik_max_word





POST /_analyze
{
  "text": "传智播客 程序员 耗子尾汁 台湾",
  "analyzer": "ik_max_word"
}

# 创建索引 并同时建立映射（对文档中的字段进行约束）
# 创建了索引库库名称叫heima
# 建立映射 具体的字段有：info  email name

PUT /heima
{
  "mappings": {
    "properties": {
      "info":{
        "type": "text",
        "analyzer": "ik_smart",
        "index": true
      },
      "email":{
        "type": "keyword",
        "index": false
      },
      "name":{
        "properties": {
          "firstName": {
            "type": "keyword"
          }
        }
      }
     
    }
  }
}
# 查看索引
GET /heima

HEAD /heima


# 增加一个新的字段
PUT /heima/_mapping
{
  "properties": {
    "age":{
      "type": "integer"
    }
  }
}

# 删除索引
DELETE /heima

# 文档进行操作（添加文档 删除文档 更新文档 查询文档）

# 添加文档  _id 就是文档的唯一标识  如果没有手动的进行字段的映射 ES会自动的进行映射
POST /heima/_doc/1
{
  "email":"laoliu@itcast.cn",
  "info":"info信息",
  "name":{
    "firstName":"zhao",
    "lastName":"yun"
  }
}
#根据文档的唯一标识查询文档
GET /heima/_doc/1


# 我想更新一部分字段的值 不想更新全部
POST /heima/_update/1
{
 
  "doc": {
    "info":"gaigaigai"
  }
  
}

# 删除
DELETE /heima/_doc/1


PUT /hotel
{
  "mappings": {
    "properties": {
      "id": {
        "type": "long"
      },
      "name":{
        "type": "text",
        "analyzer": "ik_max_word",
        "copy_to": "all"
      },
      "address":{
        "type": "keyword",
        "index": false
      },
      "price":{
        "type": "integer"
      },
      "score":{
        "type": "integer"
      },
      "brand":{
        "type": "keyword",
        "copy_to": "all"
      },
      "city":{
        "type": "keyword",
        "copy_to": "all"
      },
      "starName":{
        "type": "keyword"
      },
      "business":{
        "type": "keyword"
      },
      "location":{
        "type": "geo_point"
      },
      "pic":{
        "type": "keyword",
        "index": false
      },
      "all":{
        "type": "text",
        "analyzer": "ik_max_word"
      }
    }
  }
}

# 酒店相关
GET /hotel/_doc/36934


















